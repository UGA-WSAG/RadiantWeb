/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.uga.radiant.util;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeSet;

/**
 *
 * @author Chaitu
 */
public class SortMap {
   
    /**
     * Got the code from http://www.lampos.net/how-to-sort-hashmap
     * 
     * @param input
     * @return 
     */
    public static HashMap<String, Double> sortHashMap(Map<String, Double> input){
        Map<String, Double> tempMap = new HashMap<String, Double>();
        for (String wsState : input.keySet()){
            tempMap.put(wsState,input.get(wsState));
        }

        List<String> mapKeys = new ArrayList<String>(tempMap.keySet());
        List<Double> mapValues = new ArrayList<Double>(tempMap.values());
        HashMap<String, Double> sortedMap = new LinkedHashMap<String, Double>();
        TreeSet<Double> sortedSet = new TreeSet<Double>(mapValues);
        
        Object[] sortedArray = sortedSet.descendingSet().toArray();
        int size = sortedArray.length;
        for (int i=0; i<size; i++){
            sortedMap.put(mapKeys.get(mapValues.indexOf(sortedArray[i])), 
                          (Double)sortedArray[i]);
        }
        return sortedMap;
    }
    
    public static void main(String[] args){
        HashMap<String, Double> unSorted = new HashMap<String, Double>();
        unSorted.put("Bristol", 23.45);
        unSorted.put("London", 345.122);
        unSorted.put("Manchester", 12.3);
        unSorted.put("Edinburgh", 11.4); 
        
        Map<String,Double> sorted = sortHashMap(unSorted);
        Iterator<String> it = sorted.keySet().iterator();
        while(it.hasNext())
        {
            String key = it.next();
            System.out.println(key+" - "+sorted.get(key));
        }
    }
}
